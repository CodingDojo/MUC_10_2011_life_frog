[{:run_tests_output=>"UntitledTest.cs(11,14): error CS1525: Unexpected symbol `Assert'\nUntitledTest.cs(20,14): error CS1525: Unexpected symbol `Assert'\nCompilation failed: 2 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 11, 34], :number=>1}, {:run_tests_output=>"UntitledTest.cs(11,14): error CS1525: Unexpected symbol `Assert'\nCompilation failed: 1 error(s), 0 warnings\n", :time=>[2011, 10, 17, 21, 11, 49], :outcome=>:error, :number=>2}, {:run_tests_output=>"UntitledTest.cs(10,22): error CS0103: The name `Calc' does not exist in the current context\nUntitledTest.cs(11,35): error CS1061: Type `object' does not contain a definition for `Length' and no extension method `Length' of type `object' could be found (are you missing a using directive or an assembly reference?)\nUntitledTest.cs(12,29): error CS0021: Cannot apply indexing with [] to an expression of type `object'\nUntitledTest.cs(18,22): error CS0103: The name `Calc' does not exist in the current context\nUntitledTest.cs(20,35): error CS1061: Type `object' does not contain a definition for `Length' and no extension method `Length' of type `object' could be found (are you missing a using directive or an assembly reference?)\nUntitledTest.cs(21,30): error CS0021: Cannot apply indexing with [] to an expression of type `object'\nUntitledTest.cs(22,30): error CS0021: Cannot apply indexing with [] to an expression of type `object'\nCompilation failed: 7 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 12, 29], :number=>3}, {:run_tests_output=>".F.\nTests run: 2, Failures: 1, Not run: 0, Time: 0.059 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   Expected: 1\n  But was:  2\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 13, 10], :outcome=>:failed, :number=>4}, {:run_tests_output=>".F.\nTests run: 2, Failures: 1, Not run: 0, Time: 0.066 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   String lengths are both 2. Strings differ at index 0.\n  Expected: \"**\"\n  But was:  \"..\"\n  -----------^\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :outcome=>:failed, :time=>[2011, 10, 17, 21, 13, 33], :number=>5}, {:run_tests_output=>"Untitled.cs(6,13): warning CS0168: The variable `output' is declared but never used\nUntitled.cs(4,28): error CS0161: `LifeCalculator.Calc(string[])': not all code paths return a value\nCompilation failed: 1 error(s), 1 warnings\n", :time=>[2011, 10, 17, 21, 20, 40], :outcome=>:error, :number=>6}, {:run_tests_output=>"..F\nTests run: 2, Failures: 1, Not run: 0, Time: 0.063 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Simple :   String lengths are both 1. Strings differ at index 0.\n  Expected: \".\"\n  But was:  \"*\"\n  -----------^\n\r\nat UntitledTest.Simple () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :outcome=>:failed, :time=>[2011, 10, 17, 21, 21, 12], :number=>7}, {:run_tests_output=>"..F\nTests run: 2, Failures: 1, Not run: 0, Time: 0.061 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Simple :   String lengths are both 1. Strings differ at index 0.\n  Expected: \".\"\n  But was:  \"*\"\n  -----------^\n\r\nat UntitledTest.Simple () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 27, 47], :outcome=>:failed, :number=>8}, {:run_tests_output=>"Untitled.cs(45,9): error CS0126: An object of a type convertible to `int' is required for the return statement\nCompilation failed: 1 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 28, 4], :number=>9}, {:run_tests_output=>".F.\nTests run: 2, Failures: 1, Not run: 0, Time: 0.064 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   String lengths are both 2. Strings differ at index 0.\n  Expected: \"**\"\n  But was:  \"..\"\n  -----------^\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 28, 23], :outcome=>:failed, :number=>10}, {:run_tests_output=>".\nTests run: 1, Failures: 0, Not run: 0, Time: 0.022 seconds\r\n\r\n\r\n", :outcome=>:passed, :time=>[2011, 10, 17, 21, 28, 42], :number=>11}, {:run_tests_output=>"Untitled.cs(43,24): error CS0161: `LifeCalculator.CountNeighbors(string[], int, int)': not all code paths return a value\nCompilation failed: 1 error(s), 0 warnings\n", :time=>[2011, 10, 17, 21, 31, 4], :outcome=>:error, :number=>12}, {:run_tests_output=>"UntitledTest.cs(18,60): error CS1525: Unexpected symbol `)', expecting `,', or `}'\nUntitledTest.cs(19,41): error CS1525: Unexpected symbol `)', expecting `,', or `}'\nUntitledTest.cs(20,40): error CS1525: Unexpected symbol `)', expecting `,', or `}'\nUntitledTest.cs(24,10): error CS1525: Unexpected symbol `public', expecting `,', or `}'\nCompilation failed: 4 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 31, 25], :number=>13}, {:run_tests_output=>".F.F\nTests run: 2, Failures: 2, Not run: 0, Time: 0.069 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Simple :   String lengths are both 1. Strings differ at index 0.\n  Expected: \".\"\n  But was:  \"*\"\n  -----------^\n\r\nat UntitledTest.Simple () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n2) UntitledTest.Simple3x1ToLife :   String lengths are both 3. Strings differ at index 0.\n  Expected: \"...\"\n  But was:  \"***\"\n  -----------^\n\r\nat UntitledTest.Simple3x1ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 31, 40], :outcome=>:failed, :number=>14}, {:run_tests_output=>"..\nTests run: 2, Failures: 0, Not run: 0, Time: 0.024 seconds\r\n\r\n\r\n", :outcome=>:passed, :time=>[2011, 10, 17, 21, 32, 1], :number=>15}, {:run_tests_output=>"...F\nTests run: 3, Failures: 1, Not run: 0, Time: 0.065 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Simple3x1ToLife :   String lengths are both 3. Strings differ at index 1.\n  Expected: \".*.\"\n  But was:  \"...\"\n  ------------^\n\r\nat UntitledTest.Simple3x1ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 32, 40], :outcome=>:failed, :number=>16}, {:run_tests_output=>"...\nTests run: 3, Failures: 0, Not run: 0, Time: 0.023 seconds\r\n\r\n\r\n", :outcome=>:passed, :time=>[2011, 10, 17, 21, 38, 37], :number=>17}, {:run_tests_output=>".F...\nTests run: 4, Failures: 1, Not run: 0, Time: 0.067 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   String lengths are both 2. Strings differ at index 0.\n  Expected: \"**\"\n  But was:  \"..\"\n  -----------^\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 39, 17], :outcome=>:failed, :number=>18}, {:run_tests_output=>"UntitledTest.cs(44,17): error CS0111: A member `UntitledTest.Complex2x2ToLife()' is already defined. Rename this member or use different parameter types\nUntitledTest.cs(32,17): (Location of the symbol related to previous error)\nCompilation failed: 1 error(s), 0 warnings\n", :outcome=>:error, :time=>[2011, 10, 17, 21, 42, 28], :number=>19}, {:run_tests_output=>"....\nTests run: 4, Failures: 0, Not run: 0, Time: 0.026 seconds\r\n\r\n\r\n", :time=>[2011, 10, 17, 21, 43, 0], :outcome=>:passed, :number=>20}, {:run_tests_output=>"..F...\nTests run: 5, Failures: 1, Not run: 0, Time: 0.068 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   String lengths are both 2. Strings differ at index 0.\n  Expected: \"**\"\n  But was:  \"..\"\n  -----------^\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :outcome=>:failed, :time=>[2011, 10, 17, 21, 43, 22], :number=>21}, {:run_tests_output=>"..F...\nTests run: 5, Failures: 1, Not run: 0, Time: 0.073 seconds\r\n\r\nTest Case Failures:\r\n1) UntitledTest.Complex2x2ToLife :   String lengths are both 2. Strings differ at index 1.\n  Expected: \"**\"\n  But was:  \"*.\"\n  ------------^\n\r\nat UntitledTest.Complex2x2ToLife () [0x00000]\nat (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (object,object[],System.Exception&)\nat System.Reflection.MonoMethod.Invoke (System.Object obj, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00000]\n\r\n\r\n", :time=>[2011, 10, 17, 21, 47, 50], :outcome=>:failed, :number=>22}]
